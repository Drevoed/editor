{"version":3,"file":"indent.js","sourceRoot":"","sources":["indent.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAA;AAC7D,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAE1C,MAAM,WAAW,GAAG,CAAC,CAAA;AACrB,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA;AAE3C,MAAM,UAAU,MAAM,CAAC,MAAc;IACnC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC;KACjD,CAAC,CAAA;IAEF,KAAK,MAAM,CAAC,EAAE,QAAQ,CAAC,IAAI,WAAW,EAAE;QACtC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAC5C,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;KAC1D;AACH,CAAC","sourcesContent":["import { GlobalMatchers } from '../../../lib/global-matchers'\nimport { Editor, Transforms } from 'slate'\n\nconst INDENT_SIZE = 2\nconst INDENTATION = ' '.repeat(INDENT_SIZE)\n\nexport function indent(editor: Editor) {\n  const lineEntries = Editor.nodes(editor, {\n    match: GlobalMatchers.block(editor, 'code-line'),\n  })\n\n  for (const [, linePath] of lineEntries) {\n    const start = Editor.start(editor, linePath)\n    Transforms.insertText(editor, INDENTATION, { at: start })\n  }\n}\n"]}