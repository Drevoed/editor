{"version":3,"file":"insert-exit-break.js","sourceRoot":"","sources":["insert-exit-break.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAA;AAC7D,OAA8B,uBAAuB,CAAA;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAA;AACzC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,EAAU,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAMvD,MAAM,UAAU,eAAe,CAAC,MAAc;IAC5C,MAAM,OAAO,GAAoB,EAAE,OAAO,EAAE,IAAI,EAAE,CAAA;IAClD,MAAM,OAAO,GAAoB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAA;IAEnD,IAAI,CAAC,MAAM,CAAC,SAAS;QAAE,OAAO,OAAO,CAAA;IAErC,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;QACtC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;KAC1B;IAED,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACtC,IAAI,CAAC,IAAI;QAAE,OAAO,OAAO,CAAA;IAEzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;QACrC,OAAO,OAAO,CAAA;KACf;IAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;QACpC,OAAO,CAAC,MAAM,CAAC,CAAA;QACf,OAAO,OAAO,CAAA;KACf;IAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;QAAE,OAAO,OAAO,CAAA;IAEtC,MAAM,YAAY,GAA+B;QAC/C,IAAI,EAAE,WAAW;QACjB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;KAC5D,CAAA;IAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;QACpC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE;YACrC,OAAO,OAAO,CAAA;SACf;QAED,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,EAAE;YAC3C,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;SAC5B,CAAC,CAAA;QAEF,OAAO,OAAO,CAAA;KACf;IAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE;QAClC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,EAAE;gBAC3C,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrC,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;SACH;aAAM;YACL,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,EAAE;gBAC3C,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;gBACtC,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;SACH;QAED,OAAO,OAAO,CAAA;KACf;IAED,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;QAC5B,KAAK,EAAE,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7D,MAAM,EAAE,IAAI;KACb,CAAC,CAAA;IAEF,OAAO,OAAO,CAAA;AAChB,CAAC","sourcesContent":["import { GlobalMatchers } from '../../../lib/global-matchers'\nimport { ElementByType } from '../../../shared/types'\nimport { LocalQueries } from '../queries'\nimport { outdent } from './outdent'\nimport { Editor, Path, Range, Transforms } from 'slate'\n\ninterface TransformResult {\n  handled: boolean\n}\n\nexport function insertExitBreak(editor: Editor): TransformResult {\n  const handled: TransformResult = { handled: true }\n  const skipped: TransformResult = { handled: false }\n\n  if (!editor.selection) return handled\n\n  if (Range.isExpanded(editor.selection)) {\n    Transforms.delete(editor)\n  }\n\n  const info = LocalQueries.info(editor)\n  if (!info) return handled\n\n  if (!info.items.current.meta.isSimple) {\n    return skipped\n  }\n\n  if (info.blocks.current.meta.isEmpty) {\n    outdent(editor)\n    return handled\n  }\n\n  if (!info.blocks.first) return handled\n\n  const listItemNode: ElementByType<'list-item'> = {\n    type: 'list-item',\n    children: [{ type: 'paragraph', children: [{ text: '' }] }],\n  }\n\n  if (info.blocks.first.meta.isOnStart) {\n    if (info.items.previous?.meta.isEmpty) {\n      return handled\n    }\n\n    Transforms.insertNodes(editor, listItemNode, {\n      at: info.items.current.path,\n    })\n\n    return handled\n  }\n\n  if (info.blocks.first.meta.isOnEnd) {\n    if (info.blocks.second) {\n      Transforms.insertNodes(editor, listItemNode, {\n        at: info.blocks.second.path.concat(0),\n        select: true,\n      })\n    } else {\n      Transforms.insertNodes(editor, listItemNode, {\n        at: Path.next(info.items.current.path),\n        select: true,\n      })\n    }\n\n    return handled\n  }\n\n  Transforms.splitNodes(editor, {\n    match: GlobalMatchers.equals(editor, info.items.current.node),\n    always: true,\n  })\n\n  return handled\n}\n"]}