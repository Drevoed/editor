{"version":3,"file":"toolbar.jsx","sourceRoot":"","sources":["toolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useEditorNodeRef } from '../../lib/hooks/slate'\nimport { useForceUpdate } from '../../lib/hooks/use-force-update'\nimport { useThrottled } from '../../lib/hooks/use-throttled'\nimport { TIPPY_THEMES } from '../../lib/tippy'\nimport { useToolbarState } from './toolbar-context'\nimport debounce from 'just-debounce-it'\nimport React, { ReactNode, useEffect, useMemo } from 'react'\nimport ReactDOM from 'react-dom'\nimport tippy from 'tippy.js'\n\n/*\n * We use this element as the React Portal container\n * It's something like our custom tippy react binding\n * (the default one doesn't work well for the toolbar)\n */\nfunction useContainer() {\n  const container = useMemo(() => {\n    const element = document.createElement('div')\n    element.classList.add('toolbar-container')\n    return element\n  }, [])\n\n  /*\n   * Prevent deselection after clicking on the tooltip\n   */\n  useEffect(() => {\n    const listener = (event: Event) => event.preventDefault()\n    container.addEventListener('mousedown', listener)\n    return () => container.removeEventListener('mousedown', listener)\n  }, [container])\n\n  return container\n}\n\ninterface Props {\n  renderButtons: () => ReactNode\n}\n\nexport const Toolbar = (props: Props) => {\n  if (typeof window === 'undefined') return null\n  return <ToolbarInner {...props} />\n}\n\nconst ToolbarInner = ({ renderButtons }: Props) => {\n  const editorNodeRef = useEditorNodeRef()\n  const container = useContainer()\n  const { instance, lastSelectedText } = useToolbarState()\n  const forceUpdate = useThrottled(useForceUpdate(), 300)\n\n  useEffect(() => {\n    if (!editorNodeRef.current) return\n\n    instance.current = tippy(editorNodeRef.current, {\n      theme: TIPPY_THEMES.TOOLBAR,\n      content: container,\n      placement: 'top',\n      trigger: 'manual',\n      interactive: true,\n      offset: [0, 15],\n      moveTransition: 'transform 0.1s ease-out',\n      getReferenceClientRect: () => {\n        const selection = window.getSelection()\n        if (!selection) return new DOMRect()\n        const range = selection.getRangeAt(0)\n        return range.getBoundingClientRect()\n      },\n    })\n\n    const debouncedShow = debounce(() => {\n      if (!instance.current) return\n      forceUpdate() // update toolbar buttons\n      instance.current.show()\n    }, 300)\n\n    const hide = (cancelShow = true) => {\n      if (!instance.current) return\n      instance.current.hide()\n      if (cancelShow) debouncedShow.cancel()\n    }\n\n    const handleSelection = () => {\n      if (!editorNodeRef.current) return\n      if (!instance.current) return\n\n      if (document.activeElement !== editorNodeRef.current) {\n        /*\n         * The user may select text in another instance of the Editor\n         */\n\n        return hide()\n      }\n\n      const selection = window.getSelection()\n\n      if (!selection) {\n        return hide()\n      }\n\n      if (selection.isCollapsed) {\n        /*\n         * The user selected 0 characters\n         * We don't want to show the toolbar in this case\n         */\n\n        lastSelectedText.current = ''\n        return hide()\n      }\n\n      const range = selection.getRangeAt(0)\n      const selectedText = range.toString()\n\n      const isSamePlace = selectedText === lastSelectedText.current\n\n      if (isSamePlace) {\n        /*\n         * 'selectionchange' was fired but text remained the same\n         * Most likely, the user just formatted the text\n         * So, re-render the component to update toolbar buttons\n         */\n\n        return forceUpdate()\n      }\n\n      hide(false) // keep hidden while selecting\n      debouncedShow() // show on finish\n\n      lastSelectedText.current = selectedText\n    }\n\n    document.addEventListener('selectionchange', handleSelection)\n    return () => {\n      instance.current?.destroy()\n      document.removeEventListener('selectionchange', handleSelection)\n    }\n  }, [container, editorNodeRef])\n\n  return ReactDOM.createPortal(renderButtons(), container)\n}\n"]}