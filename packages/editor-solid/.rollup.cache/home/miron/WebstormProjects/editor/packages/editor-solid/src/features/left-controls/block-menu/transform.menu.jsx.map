{"version":3,"file":"transform.menu.jsx","sourceRoot":"","sources":["transform.menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useEditor, useEditorNodeRef } from '../../../lib/hooks/slate'\nimport { SettingsRegistry } from '../../../registries/settings'\nimport type { ElementType } from '../../../shared/types'\nimport { useControlsState } from '../controls'\nimport { MenuWrapper } from './menu-wrapper'\nimport { BlockMenuContent } from './shared'\nimport type { ContentProps, MenuAdditionalProps, SvgComponent } from './types'\nimport React, { useMemo } from 'react'\nimport { Element, Transforms } from 'slate'\nimport { ReactEditor } from 'slate-react'\n\nexport const TransformMenu = (props: MenuAdditionalProps) => (\n  <MenuWrapper\n    svg={ArrowSvg}\n    iconClassName=\"arrow\"\n    content={TransformMenuContent}\n    {...props}\n  />\n)\n\nconst ArrowSvg: SvgComponent = (props) => (\n  <svg\n    preserveAspectRatio=\"xMidYMid meet\"\n    height=\"1em\"\n    width=\"1em\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    stroke=\"currentColor\"\n    {...props}\n  >\n    <g>\n      <polyline points=\"6 9 12 15 18 9\" />\n    </g>\n  </svg>\n)\n\nconst TransformMenuContent = (props: ContentProps) => {\n  const { sections = [] } = props\n\n  return (\n    <div className=\"block-menu\">\n      <Transformations {...props} />\n      {sections.map((section, index) => {\n        const Section = section\n        // eslint-disable-next-line react/no-array-index-key\n        return <Section key={index} {...props} />\n      })}\n    </div>\n  )\n}\n\nconst Transformations = ({ hide }: ContentProps) => {\n  const editor = useEditor()\n  const editorNodeRef = useEditorNodeRef()\n  const { element } = useControlsState()\n  const path = usePath(element)\n  const settings = SettingsRegistry.get(element.type)\n\n  const transform = (type: ElementType) => {\n    Transforms.setNodes(editor, { type }, { at: path })\n    hide()\n    editorNodeRef.current?.focus()\n  }\n\n  const variants = useMemo(() => {\n    return settings.allowedTransformations.map((type) => {\n      const { name, code } = SettingsRegistry.get(type)\n\n      return (\n        <BlockMenuContent.Item\n          key={type}\n          name={name}\n          detail={`/${code}`}\n          onClick={() => transform(type)}\n        />\n      )\n    })\n  }, [settings])\n\n  if (variants.length === 0) {\n    return null\n  }\n\n  return (\n    <BlockMenuContent.Section name=\"Select item type\">\n      <BlockMenuContent.List>{variants}</BlockMenuContent.List>\n    </BlockMenuContent.Section>\n  )\n}\n\nfunction usePath(element: Element) {\n  const editor = useEditor()\n  return ReactEditor.findPath(editor, element)\n}\n"]}