{"version":3,"file":"link-popup-context.js","sourceRoot":"","sources":["link-popup-context.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,qCAAqC,CAAA;AACpE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAInE,MAAM,UAAU,oBAAoB;IAClC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAA;IACpC,OAAO;QACL,QAAQ,EAAE,MAAM,CAAkB,IAAI,CAAC;QACvC,KAAK,EAAE,MAAM,CAA0B,IAAI,CAAC;QAC5C,SAAS,EAAE,MAAM,CAAe,IAAI,CAAC;QACrC,OAAO,EAAE,MAAM,CAAU,KAAK,CAAC;QAC/B,IAAI;QACJ,OAAO;KACR,CAAA;AACH,CAAC;AAID,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAiB;IAC5D,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;IAC3B,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;IACxB,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;IAC5B,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;IAC3B,IAAI,EAAE,EAAE;IACR,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC;CAClB,CAAC,CAAA;AAEF,MAAM,UAAU,iBAAiB;IAC/B,OAAO,UAAU,CAAC,gBAAgB,CAAC,CAAA;AACrC,CAAC;AAED,MAAM,UAAU,mBAAmB;IACjC,MAAM,KAAK,GAAG,iBAAiB,EAAE,CAAA;IACjC,MAAM,WAAW,GAAG,cAAc,EAAE,CAAA;IAEpC,MAAM,IAAI,GAAG,CAAC,EACZ,SAAS,EACT,IAAI,GAAG,EAAE,GAIV,EAAE,EAAE;QACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO;YAAE,OAAM;QACnC,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAA;QACnC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;QAC7B,IAAI,IAAI,EAAE;YACR,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACnB,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAA;SAC7B;IACH,CAAC,CAAA;IAED,MAAM,KAAK,GAAG,GAAG,EAAE;QACjB,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAA;QAC9B,KAAK,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAA;QAC7B,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;IACnB,CAAC,CAAA;IAED,MAAM,IAAI,GAAG,GAAG,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO;YAAE,OAAM;QACnC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;IAC/B,CAAC,CAAA;IAED,MAAM,KAAK,GAAG,GAAG,EAAE;QACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO;YAAE,OAAM;QAChC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;IAC7B,CAAC,CAAA;IAED,MAAM,MAAM,GAAG,GAAG,EAAE;QAClB,WAAW,EAAE,CAAA;IACf,CAAC,CAAA;IAED,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,KAAK;QACL,KAAK;QACL,MAAM;KACP,CAAA;AACH,CAAC","sourcesContent":["import { useForceUpdate } from '../../../lib/hooks/use-force-update'\nimport { createContext, useContext, useRef, useState } from 'react'\nimport type { Range } from 'slate'\nimport type { Instance } from 'tippy.js'\n\nexport function useNewLinkPopupState() {\n  const [href, setHref] = useState('')\n  return {\n    instance: useRef<Instance | null>(null),\n    input: useRef<HTMLInputElement | null>(null),\n    selection: useRef<Range | null>(null),\n    hadHref: useRef<boolean>(false),\n    href,\n    setHref,\n  }\n}\n\nexport type LinkPopupState = ReturnType<typeof useNewLinkPopupState>\n\nexport const LinkPopupContext = createContext<LinkPopupState>({\n  instance: { current: null },\n  input: { current: null },\n  selection: { current: null },\n  hadHref: { current: false },\n  href: '',\n  setHref: () => {},\n})\n\nexport function useLinkPopupState() {\n  return useContext(LinkPopupContext)\n}\n\nexport function useLinkPopupActions() {\n  const state = useLinkPopupState()\n  const forceUpdate = useForceUpdate()\n\n  const show = ({\n    selection,\n    href = '',\n  }: {\n    selection: Range\n    href?: string\n  }) => {\n    if (!state.instance.current) return\n    state.selection.current = selection\n    state.instance.current.show()\n    if (href) {\n      state.setHref(href)\n      state.hadHref.current = true\n    }\n  }\n\n  const reset = () => {\n    state.selection.current = null\n    state.hadHref.current = false\n    state.setHref('')\n  }\n\n  const hide = () => {\n    if (!state.instance.current) return\n    state.instance.current.hide()\n  }\n\n  const focus = () => {\n    if (!state.input.current) return\n    state.input.current.focus()\n  }\n\n  const update = () => {\n    forceUpdate()\n  }\n\n  return {\n    show,\n    hide,\n    reset,\n    focus,\n    update,\n  }\n}\n\nexport type LinkPopupActions = ReturnType<typeof useLinkPopupActions>\n"]}