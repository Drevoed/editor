{"version":3,"file":"render.element.jsx","sourceRoot":"","sources":["render.element.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  CodeComponent,\n  CodeControls,\n  CodeLineComponent,\n} from '../features/code'\nimport {\n  Heading1Component,\n  Heading2Component,\n  Heading3Component,\n} from '../features/headings'\nimport { BlockMenu, Controls } from '../features/left-controls'\nimport {\n  ListItemComponent,\n  OrderedListComponent,\n  UnorderedListComponent,\n} from '../features/list'\nimport { ParagraphComponent } from '../features/paragraph'\nimport { useEditor } from '../lib/hooks/slate'\nimport clsx from 'clsx'\nimport React from 'react'\nimport type { Element } from 'slate'\nimport { ReactEditor, RenderElementProps, useReadOnly } from 'slate-react'\nimport type { ElementType } from '@cardbox-editor/core'\n\ntype ElementComponentMapper = {\n  [KElementType in ElementType]: (props: RenderElementProps) => JSX.Element\n}\n\nconst ELEMENT_COMPONENT_MAPPER: ElementComponentMapper = {\n  'paragraph': ParagraphComponent,\n  'heading-1': Heading1Component,\n  'heading-2': Heading2Component,\n  'heading-3': Heading3Component,\n  'ordered-list': OrderedListComponent,\n  'unordered-list': UnorderedListComponent,\n  'list-item': ListItemComponent,\n  'code': CodeComponent,\n  'code-line': CodeLineComponent,\n}\n\nexport function renderElement({ children, ...rest }: RenderElementProps) {\n  return <ElementStructure {...rest}>{children}</ElementStructure>\n}\n\nfunction usePath(element: Element) {\n  const editor = useEditor()\n  return ReactEditor.findPath(editor, element)\n}\n\nconst ElementStructure = (props: RenderElementProps) => {\n  const { element } = props\n  const Component = ELEMENT_COMPONENT_MAPPER[element.type]\n  const path = usePath(element)\n  const isNested = path.length > 1\n\n  const elementJSX = <Component {...props} />\n\n  if (element.type === 'code-line') {\n    return elementJSX\n  }\n\n  if (isNested) {\n    // nested elements don't need controls yet\n    return (\n      <div className=\"element-container\">\n        <div className=\"content\">\n          <Area position=\"top\" />\n          {elementJSX}\n          <Area position=\"bottom\" />\n        </div>\n      </div>\n    )\n  }\n\n  return <FirstLevelElement element={element}>{elementJSX}</FirstLevelElement>\n}\n\nconst FirstLevelElement = ({\n  element,\n  children,\n}: {\n  element: Element\n  children: JSX.Element\n}) => {\n  const readOnly = useReadOnly()\n\n  const containerClass = clsx({\n    'element-container': true,\n    'first-level': true,\n    'read-only': readOnly,\n  })\n\n  return (\n    <div className={containerClass}>\n      <Controls\n        element={element}\n        render={() => <BlockMenu sections={[CodeControls]} />}\n      />\n      <div className=\"content\">\n        <Area position=\"top\" />\n        {children}\n        <Area position=\"bottom\" />\n      </div>\n    </div>\n  )\n}\n\nconst Area = ({\n  position,\n  children,\n}: {\n  position: 'top' | 'bottom'\n  children?: JSX.Element | JSX.Element[]\n}) => {\n  const className = clsx({\n    'element-area': true,\n    ['element-area-' + position]: true,\n  })\n\n  return (\n    <div contentEditable={false} className={className}>\n      {children}\n    </div>\n  )\n}\n"]}