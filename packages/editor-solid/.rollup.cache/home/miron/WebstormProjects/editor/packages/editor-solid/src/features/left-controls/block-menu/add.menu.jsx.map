{"version":3,"file":"add.menu.jsx","sourceRoot":"","sources":["add.menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useEditor, useEditorNodeRef } from '../../../lib/hooks/slate'\nimport { SettingsRegistry } from '../../../registries/settings'\nimport type { ElementType } from '../../../shared/types'\nimport { useControlsState } from '../controls'\nimport { MenuWrapper } from './menu-wrapper'\nimport { BlockMenuContent } from './shared'\nimport type { ContentProps, MenuAdditionalProps, SvgComponent } from './types'\nimport React, { useMemo } from 'react'\nimport { Element, Transforms } from 'slate'\nimport { ReactEditor } from 'slate-react'\n\nexport const AddMenu = (props: MenuAdditionalProps) => (\n  <MenuWrapper\n    svg={PlusSvg}\n    iconClassName=\"plus\"\n    content={AddMenuContent}\n    {...props}\n  />\n)\n\nconst PlusSvg: SvgComponent = (props) => (\n  <svg\n    preserveAspectRatio=\"xMidYMid meet\"\n    height=\"1em\"\n    width=\"1em\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    stroke=\"currentColor\"\n    {...props}\n  >\n    <g>\n      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n    </g>\n  </svg>\n)\n\nconst AddMenuContent = ({ hide }: ContentProps) => {\n  const editor = useEditor()\n  const editorNodeRef = useEditorNodeRef()\n  const { element } = useControlsState()\n  const path = usePath(element)\n\n  const add = (type: ElementType) => {\n    const settings = SettingsRegistry.get(type)\n    Transforms.removeNodes(editor, { at: path })\n    Transforms.insertNodes(editor, settings.create(), {\n      at: path,\n      select: true,\n    })\n    hide()\n    editorNodeRef.current?.focus()\n  }\n\n  const variants = useMemo(() => {\n    return SettingsRegistry.getAll()\n      .filter((settings) => settings.canBeAdded !== false)\n      .map(({ type, name, code }) => {\n        return (\n          <BlockMenuContent.Item\n            key={type}\n            name={name}\n            detail={`/${code}`}\n            onClick={() => add(type)}\n          />\n        )\n      })\n  }, [])\n\n  return (\n    <div className=\"block-menu\">\n      <BlockMenuContent.Section name=\"Select item type\">\n        <BlockMenuContent.List>{variants}</BlockMenuContent.List>\n      </BlockMenuContent.Section>\n    </div>\n  )\n}\n\nfunction usePath(element: Element) {\n  const editor = useEditor()\n  return ReactEditor.findPath(editor, element)\n}\n"]}