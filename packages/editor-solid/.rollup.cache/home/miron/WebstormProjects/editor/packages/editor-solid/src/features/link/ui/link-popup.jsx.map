{"version":3,"file":"link-popup.jsx","sourceRoot":"","sources":["link-popup.tsx"],"names":[],"mappings":"AAAA,OAAc,EAGZ,SAAS,EACT,OAAO,EACP,QAAQ,GACT,MAAM,OAAO,CAAA;AACd,OAAO,QAAQ,MAAM,WAAW,CAAA;AAChC,OAAO,KAAK,MAAM,UAAU,CAAA;AAC5B,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAA;AACtE,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAA;AACjD,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAA;AAC7D,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAA;AAC7E,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAA;AAC1E,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAE/D;;;;GAIG;AACH,SAAS,YAAY;IACnB,OAAO,OAAO,CAAC,GAAG,EAAE;QAClB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC7C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;QAC7C,OAAO,OAAO,CAAA;IAChB,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC;AAED,SAAS,KAAK,CAAC,MAAc;IAC3B,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;IACtC,OAAO,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AACjD,CAAC;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,IAAI,OAAO,MAAM,KAAK,WAAW;QAAE,OAAO,IAAI,CAAA;IAC9C,OAAO,CAAC,cAAc,CAAC,AAAD,EAAG,CAAA;AAC3B,CAAC,CAAA;AAED,MAAM,cAAc,GAAG,GAAG,EAAE;IAC1B,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAA;IACxC,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;IAChC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAC1D,iBAAiB,EAAE,CAAA;IACrB,MAAM,EAAE,KAAK,EAAE,GAAG,mBAAmB,EAAE,CAAA;IACvC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IACzC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAA;IAEvD,MAAM,YAAY,GAAG,CAAC,KAAoC,EAAE,EAAE;QAC5D,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IAC7B,CAAC,CAAA;IAED,MAAM,YAAY,GAAG,CAAC,KAAgB,EAAE,EAAE;QACxC,KAAK,CAAC,cAAc,EAAE,CAAA;QACtB,IAAI,CAAC,KAAK;YAAE,OAAM;QAClB,IAAI,CAAC,SAAS,CAAC,OAAO;YAAE,OAAM;QAC9B,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAA;QACjE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,CAAA;QACxB,aAAa,CAAC,OAAO,EAAE,KAAK,EAAE,CAAA;IAChC,CAAC,CAAA;IAED,MAAM,KAAK,GAAG,GAAG,EAAE;QACjB,IAAI,CAAC,SAAS,CAAC,OAAO;YAAE,OAAM;QAC9B,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAA;QAC7D,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,CAAA;QACxB,aAAa,CAAC,OAAO,EAAE,KAAK,EAAE,CAAA;IAChC,CAAC,CAAA;IAED,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,EAAE;QAChC,QAAQ,CAAC,IAAI,CAAC,CAAA;QAEd,IAAI,CAAC,IAAI,EAAE;YACT,QAAQ,CAAC,KAAK,CAAC,CAAA;YACf,OAAM;SACP;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YAChB,QAAQ,CAAC,KAAK,CAAC,CAAA;YACf,QAAQ,CAAC,6BAA6B,CAAC,CAAA;YACvC,OAAM;SACP;QAED,QAAQ,CAAC,IAAI,CAAC,CAAA;IAChB,CAAC,CAAA;IAED,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,IAAI,CAAC,CAAA;IAChB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA;IAEV,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,aAAa,CAAC,OAAO;YAAE,OAAM;QAElC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE;YAC9C,KAAK,EAAE,YAAY,CAAC,UAAU;YAC9B,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,QAAQ;YACnB,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;YACf,cAAc,EAAE,yBAAyB;YACzC,sBAAsB,EAAE,GAAG,EAAE;gBAC3B,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAA;gBACvC,IAAI,CAAC,SAAS;oBAAE,OAAO,IAAI,OAAO,EAAE,CAAA;gBACpC,MAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;gBACrC,OAAO,KAAK,CAAC,qBAAqB,EAAE,CAAA;YACtC,CAAC;YACD,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;SACxB,CAAC,CAAA;QAEF,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA;IAC1C,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAA;IAE9B,OAAO,QAAQ,CAAC,YAAY,CAC1B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAC3B;MAAA,CAAC,YAAY,CACX;QAAA,CAAC,QAAQ,CACP;UAAA,CAAC,WAAW,CAAC,AAAD,EACd;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,KAAK,CAAC,CAAC,IAAI,CAAC,CACZ,QAAQ,CAAC,CAAC,YAAY,CAAC,CACvB,WAAW,CAAC,eAAe,EAE7B;QAAA,CAAC,OAAO,CAAC,OAAO,IAAI,CAClB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CACxB;YAAA,CAAC,YAAY,CAAC,AAAD,EACf;UAAA,EAAE,SAAS,CAAC,CACb,CACH;MAAA,EAAE,YAAY,CACd;MAAA,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAClC;IAAA,EAAE,IAAI,CAAC,EACP,SAAS,CACV,CAAA;AACH,CAAC,CAAA","sourcesContent":["import React, {\n  ChangeEvent,\n  FormEvent,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport tippy from 'tippy.js'\nimport { useEditor, useEditorNodeRef } from '../../../lib/hooks/slate'\nimport { TIPPY_THEMES } from '../../../lib/tippy'\nimport { ClearIconSvg, LinkIconSvg } from '../../../ui/icons'\nimport { useLinkPopupActions, useLinkPopupState } from './link-popup-context'\nimport { ClearIcon, Error, Input, InputWrapper, LinkIcon } from './styles'\nimport { GlobalTransforms, REGEX } from \"@cardbox-editor/core\";\n\n/*\n * We use this element as the React Portal container\n * It's something like our custom tippy react binding\n * (the default one doesn't work well for the link popup)\n */\nfunction useContainer() {\n  return useMemo(() => {\n    const element = document.createElement('div')\n    element.classList.add('link-popup-container')\n    return element\n  }, [])\n}\n\nfunction isURL(string: string) {\n  const url = new RegExp(REGEX.URL, 'i')\n  return string.length < 2083 && url.test(string)\n}\n\nexport const LinkPopup = () => {\n  if (typeof window === 'undefined') return null\n  return <LinkPopupInner />\n}\n\nconst LinkPopupInner = () => {\n  const editor = useEditor()\n  const editorNodeRef = useEditorNodeRef()\n  const container = useContainer()\n  const { instance, input, selection, href, setHref, hadHref } =\n    useLinkPopupState()\n  const { reset } = useLinkPopupActions()\n  const [valid, setValid] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setHref(event.target.value)\n  }\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault()\n    if (!valid) return\n    if (!selection.current) return\n    GlobalTransforms.setHref(editor, href, { at: selection.current })\n    instance.current?.hide()\n    editorNodeRef.current?.focus()\n  }\n\n  const clear = () => {\n    if (!selection.current) return\n    GlobalTransforms.clearHref(editor, { at: selection.current })\n    instance.current?.hide()\n    editorNodeRef.current?.focus()\n  }\n\n  const validate = (href: string) => {\n    setError(null)\n\n    if (!href) {\n      setValid(false)\n      return\n    }\n\n    if (!isURL(href)) {\n      setValid(false)\n      setError(\"It doesn't look like an URL\")\n      return\n    }\n\n    setValid(true)\n  }\n\n  useEffect(() => {\n    validate(href)\n  }, [href])\n\n  useEffect(() => {\n    if (!editorNodeRef.current) return\n\n    instance.current = tippy(editorNodeRef.current, {\n      theme: TIPPY_THEMES.LINK_POPUP,\n      content: container,\n      placement: 'bottom',\n      trigger: 'manual',\n      interactive: true,\n      offset: [0, 15],\n      moveTransition: 'transform 0.1s ease-out',\n      getReferenceClientRect: () => {\n        const selection = window.getSelection()\n        if (!selection) return new DOMRect()\n        const range = selection.getRangeAt(0)\n        return range.getBoundingClientRect()\n      },\n      hideOnClick: true,\n      onHidden: () => reset(),\n    })\n\n    return () => instance.current?.destroy()\n  }, [container, editorNodeRef])\n\n  return ReactDOM.createPortal(\n    <form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <LinkIcon>\n          <LinkIconSvg />\n        </LinkIcon>\n        <Input\n          ref={input}\n          value={href}\n          onChange={handleChange}\n          placeholder=\"Enter the URL\"\n        />\n        {hadHref.current && (\n          <ClearIcon onClick={clear}>\n            <ClearIconSvg />\n          </ClearIcon>\n        )}\n      </InputWrapper>\n      {error && <Error>{error}</Error>}\n    </form>,\n    container\n  )\n}\n"]}