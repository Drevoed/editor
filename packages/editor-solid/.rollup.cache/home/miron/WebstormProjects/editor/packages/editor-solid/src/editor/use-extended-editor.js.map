{"version":3,"file":"use-extended-editor.js","sourceRoot":"","sources":["use-extended-editor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAC/B,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,OAAO,CAAA;AAC1C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,EACL,iBAAiB,EACjB,qBAAqB,EACrB,wBAAwB,EACxB,sBAAsB,EACtB,0BAA0B,EAC1B,MAAM,EAEN,UAAU,GACX,MAAM,sBAAsB,CAAA;AAE7B,MAAM,iBAAiB,GAAgB;IACrC,SAAS;IACT,WAAW;IACX,UAAU,CAAC,iBAAiB;IAC5B,UAAU,CAAC,MAAM,CAAC;QAChB;YACE,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,CAAC,GAAG,CAAC;YACb,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,OAAO;YACtB,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;gBACvB,MAAM,YAAY,GAAI,KAAK,CAAC,QAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBACtE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC;oBAAE,OAAO,0BAA0B,EAAE,CAAA;gBAClE,OAAO,0BAA0B,CAAC;oBAChC,qBAAqB,CAAC,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC9D,CAAC,CAAA;YACJ,CAAC;SACF;QACD;YACE,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;YACpB,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,OAAO;YACtB,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;gBACvB,MAAM,YAAY,GAAI,KAAK,CAAC,QAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBACtE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC;oBAAE,OAAO,wBAAwB,EAAE,CAAA;gBAChE,OAAO,wBAAwB,CAAC;oBAC9B,qBAAqB,CAAC,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC9D,CAAC,CAAA;YACJ,CAAC;SACF;QACD;YACE,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,gBAAgB,EAAE,IAAI;YACtB,aAAa,EAAE,OAAO;YACtB,SAAS,EAAE,GAAG,EAAE;gBACd,OAAO,iBAAiB,EAAE,CAAA;YAC5B,CAAC;SACF;KACF,CAAC;CACH,CAAA;AAED,MAAM,UAAU,iBAAiB,CAAC,mBAAgC,EAAE;IAClE,OAAO,OAAO,CAAC,GAAG,EAAE;QAClB,MAAM,eAAe,GAAG,CAAC,GAAG,iBAAiB,EAAE,GAAG,gBAAgB,CAAC,CAAA;QAEnE,MAAM,MAAM,GAAG,YAAY,EAAE,CAAA;QAC7B,OAAO,MAAM,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;IACxC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAA;AAClB,CAAC","sourcesContent":["import { useMemo } from 'react'\nimport { createEditor, Text } from 'slate'\nimport { withHistory } from 'slate-history'\nimport { withReact } from 'slate-react'\nimport {\n  createCodeElement,\n  createListItemElement,\n  createOrderedListElement,\n  createParagraphElement,\n  createUnorderedListElement,\n  extend,\n  Extension,\n  extensions,\n} from '@cardbox-editor/core'\n\nconst defaultExtensions: Extension[] = [\n  withReact,\n  withHistory,\n  extensions.listNormalization,\n  extensions.format([\n    {\n      trigger: ' ',\n      keepTrigger: false,\n      markupType: 'after',\n      markup: ['-'],\n      onlyOnBlockStart: true,\n      transformType: 'block',\n      transform: ({ block }) => {\n        const initialLeafs = (block.children as unknown[]).filter(Text.isText)\n        if (initialLeafs.length === 0) return createUnorderedListElement()\n        return createUnorderedListElement([\n          createListItemElement([createParagraphElement(initialLeafs)]),\n        ])\n      },\n    },\n    {\n      trigger: ' ',\n      keepTrigger: false,\n      markupType: 'after',\n      markup: ['1.', '1)'],\n      onlyOnBlockStart: true,\n      transformType: 'block',\n      transform: ({ block }) => {\n        const initialLeafs = (block.children as unknown[]).filter(Text.isText)\n        if (initialLeafs.length === 0) return createOrderedListElement()\n        return createOrderedListElement([\n          createListItemElement([createParagraphElement(initialLeafs)]),\n        ])\n      },\n    },\n    {\n      trigger: ' ',\n      keepTrigger: false,\n      markupType: 'after',\n      markup: ['```'],\n      onlyOnBlockStart: true,\n      transformType: 'block',\n      transform: () => {\n        return createCodeElement()\n      },\n    },\n  ]),\n]\n\nexport function useExtendedEditor(customExtensions: Extension[] = []) {\n  return useMemo(() => {\n    const finalExtensions = [...defaultExtensions, ...customExtensions]\n\n    const editor = createEditor()\n    return extend(editor, finalExtensions)\n  }, [extensions])\n}\n"]}