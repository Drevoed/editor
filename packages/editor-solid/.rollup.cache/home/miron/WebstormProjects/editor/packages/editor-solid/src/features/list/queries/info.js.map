{"version":3,"file":"info.js","sourceRoot":"","sources":["info.ts"],"names":[],"mappings":"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","sourcesContent":["import { GlobalMatchers, GlobalQueries } from '@cardbox-editor/core'\nimport { Editor, NodeEntry, Path, Element, Location } from \"slate\";\nimport type { ListElement, ListItemElement } from '../elements/types'\nimport type { ParagraphElement } from \"../../paragraph\";\n\ninterface Options {\n  at?: Location\n}\n\ninterface Info<\n  TElement extends Element = Element,\n  TMeta extends unknown = unknown\n> {\n  node: TElement\n  path: Path\n  meta: TMeta\n}\n\ntype NoMeta<TInfo extends Info = Info> = Omit<TInfo, 'meta'>\n\ninterface ListMeta {\n  isNested: boolean\n}\n\ninterface ItemMeta {\n  // contains only paragraph and list optionally\n  isSimple: boolean\n\n  // position in list\n  index: number\n  isFirst: boolean\n  isLast: boolean\n\n  // has nothing inside\n  isEmpty: boolean\n}\n\ninterface BlockMeta {\n  isList: boolean\n\n  // position in item\n  isFirst: boolean\n  isLast: boolean\n\n  // selection position\n  isOnStart: boolean\n  isOnEnd: boolean\n\n  // has no text inside\n  isEmpty: boolean\n}\n\ntype ListInfo = Info<ListElement, ListMeta>\ntype ItemInfo = Info<ListItemElement, ItemMeta>\ntype BlockInfo = Info<Element, BlockMeta>\n\ninterface ItemBlocks {\n  first: BlockInfo | null\n  second: BlockInfo | null\n  third: BlockInfo | null\n}\n\nfunction isList(editor: Editor) {\n  return GlobalMatchers.block(editor, ['ordered-list', 'unordered-list'])\n}\n\nfunction createBlockMeta(editor: Editor, item: NoMeta<ItemInfo>) {\n  return ([node, path]: [Element, Path]) => {\n    const [isOnStart, isOnEnd] = GlobalQueries.isOnEdges(editor, {\n      of: path,\n    })\n\n    const isEmpty = Editor.isEmpty(editor, node)\n\n    const children = item.node.children\n\n    return {\n      isFirst: children[0] === node,\n      isLast: children[children.length - 1] === node,\n      isOnStart,\n      isOnEnd,\n      isEmpty,\n      isList: isList(editor)(node),\n    }\n  }\n}\n\nfunction createItemBlocks(editor: Editor, item: NoMeta<ItemInfo>): ItemBlocks {\n  const entry: NodeEntry<Element> = [item.node, item.path]\n\n  const first = createInfo({\n    entry: childAt<ParagraphElement>(entry, 0),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  const second = createInfo({\n    entry: childAt(entry, 1),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  const third = createInfo({\n    entry: childAt(entry, 2),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  return {\n    first,\n    second,\n    third,\n  }\n}\n\nfunction isParagraph(editor: Editor) {\n  return GlobalMatchers.block(editor, 'paragraph')\n}\n\nfunction createItemMeta(\n  editor: Editor,\n  list: NoMeta<ListInfo>,\n  blocks: ItemBlocks\n) {\n  const { first, second, third } = blocks\n\n  const isSimple = (): boolean => {\n    if (!first) return false\n    if (first.node.type !== 'paragraph') return false\n    if (!second) return true\n    if (!isList(editor)(second.node)) return false\n    if (third) return false\n    return true\n  }\n\n  return ([node]: [Element, Path]) => {\n    const index = list.node.children.findIndex((item) => item === node)\n\n    return {\n      isSimple: isSimple(),\n      index,\n      isFirst: index === 0,\n      isLast: index === list.node.children.length - 1,\n      isEmpty:\n        node.children.length === 1 &&\n        isParagraph(editor)(node.children[0]) &&\n        Editor.isEmpty(editor, node.children[0]),\n      hasList: isList(editor)(node.children[1]),\n    }\n  }\n}\n\nfunction createItemAndBlocksInfo({\n  editor,\n  entry,\n  list,\n}: {\n  editor: Editor\n  entry: NodeEntry<ListItemElement> | undefined\n  list: NoMeta<ListInfo>\n}) {\n  if (!entry) {\n    return { item: null, blocks: null }\n  }\n\n  const noMeta = createNoMeta(entry)\n  const blocks = createItemBlocks(editor, noMeta)\n\n  const item = createInfo({\n    entry,\n    createMeta: createItemMeta(editor, list, blocks),\n  })\n\n  if (!item) {\n    return { item: null, blocks: null }\n  }\n\n  return {\n    item,\n    blocks,\n  }\n}\n\nexport function info(editor: Editor, options: Options = {}) {\n  const { at = editor.selection } = options\n  if (!at) return\n  if (!Location.isLocation(at)) return\n\n  const listEntry = GlobalQueries.getAbove<ListElement>(editor, {\n    at,\n    type: 'block',\n    mode: 'lowest',\n    match: isList(editor),\n  })\n\n  if (!listEntry) return\n\n  const listAboveEntry = GlobalQueries.getAbove(editor, {\n    at,\n    type: 'block',\n    mode: 'lowest',\n    match: GlobalMatchers.builder(editor)\n      .block(['ordered-list', 'unordered-list'])\n      .notEquals(listEntry[0])\n      .compile(),\n  })\n\n  const list = createInfo({\n    entry: listEntry,\n    createMeta() {\n      return {\n        isNested: Boolean(listAboveEntry),\n      }\n    },\n  })\n\n  if (!list) return\n\n  const listAbove = createInfo({\n    entry: listAboveEntry,\n    createMeta() {\n      return {}\n    },\n  })\n\n  const { item, blocks } = createItemAndBlocksInfo({\n    editor,\n    entry: GlobalQueries.getAbove<ListItemElement>(editor, {\n      at,\n      type: 'block',\n      mode: 'lowest',\n      match: GlobalMatchers.block(editor, 'list-item'),\n    }),\n    list,\n  })\n\n  if (!item) return\n  if (!blocks) return\n\n  const itemAbove = createInfo({\n    entry: GlobalQueries.getAbove<ListItemElement>(editor, {\n      at,\n      type: 'block',\n      mode: 'lowest',\n      match: GlobalMatchers.builder(editor)\n        .block('list-item')\n        .notEquals(item.node)\n        .compile(),\n    }),\n    createMeta: () => ({}),\n  })\n\n  const currentBlock = createInfo({\n    entry: GlobalQueries.getAbove(editor, {\n      at,\n      type: 'block',\n      mode: 'highest',\n      match: GlobalMatchers.childOf(editor, item.node),\n    }),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  if (!currentBlock) return\n\n  const matchSameListItem = GlobalMatchers.builder(editor)\n    .block('list-item')\n    .childOf(list.node)\n    .compile()\n\n  const { item: previousItem } = createItemAndBlocksInfo({\n    editor,\n    entry: Editor.previous<ListItemElement>(editor, {\n      at: item.path,\n      match: matchSameListItem,\n    }),\n    list,\n  })\n\n  const { item: nextItem } = createItemAndBlocksInfo({\n    editor,\n    entry: Editor.next<ListItemElement>(editor, {\n      at: item.path,\n      match: matchSameListItem,\n    }),\n    list,\n  })\n\n  const matchSameItemBlock = GlobalMatchers.builder(editor)\n    .block()\n    .childOf(item.node)\n    .compile()\n\n  const previousBlock = createInfo({\n    entry: Editor.previous<Element>(editor, {\n      at: currentBlock.path,\n      match: matchSameItemBlock,\n    }),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  const nextBlock = createInfo({\n    entry: Editor.next<Element>(editor, {\n      at: currentBlock.path,\n      match: matchSameItemBlock,\n    }),\n    createMeta: createBlockMeta(editor, item),\n  })\n\n  return {\n    lists: {\n      current: list,\n      above: listAbove,\n    },\n    items: {\n      current: item,\n      previous: previousItem,\n      next: nextItem,\n      above: itemAbove,\n    },\n    blocks: {\n      ...blocks,\n      current: currentBlock,\n      previous: previousBlock,\n      next: nextBlock,\n    },\n  }\n}\n\nexport type FullInfo = Exclude<ReturnType<typeof info>, undefined>\n\nfunction childAt<TElement extends Element>(\n  [node, path]: NodeEntry<Element>,\n  index: number\n): NodeEntry<TElement> | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (!node.children[index]) return\n  return [node.children[index] as TElement, path.concat(index)]\n}\n\nfunction createNoMeta<TElement extends Element>(\n  entry: NodeEntry<TElement>\n): NoMeta<Info<TElement>> {\n  const [node, path] = entry\n  return { node, path }\n}\n\ntype CreateMeta<\n  TElement extends Element,\n  TMeta extends Record<string, unknown>\n> = (params: [TElement, Path]) => TMeta\n\nfunction createInfo<\n  TElement extends Element,\n  TMeta extends Record<string, unknown>\n>({\n  entry,\n  createMeta = () => ({} as TMeta),\n}: {\n  entry: NodeEntry<TElement> | undefined\n  createMeta: CreateMeta<TElement, TMeta>\n}) {\n  if (!entry) return null\n  const [node, path] = entry\n  const meta = createMeta([node, path])\n  return { node, path, meta }\n}\n"]}