{"version":3,"file":"toolbar-context.js","sourceRoot":"","sources":["toolbar-context.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAA;AACjE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AACzD,OAAyB,UAAU,CAAA;AAEnC,MAAM,UAAU,kBAAkB;IAChC,OAAO;QACL,QAAQ,EAAE,MAAM,CAAkB,IAAI,CAAC;QACvC,gBAAgB,EAAE,MAAM,CAAS,EAAE,CAAC;KACrC,CAAA;AACH,CAAC;AAID,MAAM,CAAC,MAAM,cAAc,GAAG,aAAa,CAAe;IACxD,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;IAC3B,gBAAgB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;CAClC,CAAC,CAAA;AAEF,MAAM,UAAU,eAAe;IAC7B,OAAO,UAAU,CAAC,cAAc,CAAC,CAAA;AACnC,CAAC;AAED,MAAM,UAAU,iBAAiB;IAC/B,MAAM,KAAK,GAAG,eAAe,EAAE,CAAA;IAC/B,MAAM,WAAW,GAAG,cAAc,EAAE,CAAA;IAEpC,MAAM,MAAM,GAAG,GAAG,EAAE;QAClB,WAAW,EAAE,CAAA;IACf,CAAC,CAAA;IAED,MAAM,IAAI,GAAG,GAAG,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO;YAAE,OAAM;QACnC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;QAC7B,KAAK,CAAC,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAA;IACrC,CAAC,CAAA;IAED,OAAO;QACL,MAAM;QACN,IAAI;KACL,CAAA;AACH,CAAC","sourcesContent":["import { useForceUpdate } from '../../lib/hooks/use-force-update'\nimport { createContext, useContext, useRef } from 'react'\nimport { Instance } from 'tippy.js'\n\nexport function useNewToolbarState() {\n  return {\n    instance: useRef<Instance | null>(null),\n    lastSelectedText: useRef<string>(''),\n  }\n}\n\nexport type ToolbarState = ReturnType<typeof useNewToolbarState>\n\nexport const ToolbarContext = createContext<ToolbarState>({\n  instance: { current: null },\n  lastSelectedText: { current: '' },\n})\n\nexport function useToolbarState() {\n  return useContext(ToolbarContext)\n}\n\nexport function useToolbarActions() {\n  const state = useToolbarState()\n  const forceUpdate = useForceUpdate()\n\n  const update = () => {\n    forceUpdate()\n  }\n\n  const hide = () => {\n    if (!state.instance.current) return\n    state.instance.current.hide()\n    state.lastSelectedText.current = ''\n  }\n\n  return {\n    update,\n    hide,\n  }\n}\n\nexport type ToolbarActions = ReturnType<typeof useToolbarActions>\n"]}